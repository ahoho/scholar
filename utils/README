  
model2csv.py
  Takes topic model output and converts into a standard CSV file format
  Currently handles scholar, mallet, and segan topic model output

topwords.py
  Generates top-words and cloud visualizations using standard CSV file format

topic_alignment.py
  Takes two models in standard CSV format and shows aligned topics

Sweep_results
  Shell script to create CSV showing results of hyperparameter sweeps 

generate_topics.py
  Deprecated: Now use model2csv to convert from Scholar to CSV, then topwords.py

compare_models.py
  Deprecated: Now use topic_alignment.py

----------------------------------------------------------------
Notes from Alexander
(Alternative to using Sweep_results)

To get the best run out of a directory of runs, the basic move is to just loop through the directory---this is off the top of my head, so excuse any syntax errors

from pathlib import Path

import pandas as pd
import torch

output_dirs = sorted(Path("main_results_directory").glob("*"))
all_results = []
for dir in output_dirs:
    if Path(dir, "dev_metrics.csv").exists(): # if you did multiple_run_scholar.py
        run_results = pd.read_csv(Path(dir, "dev_metrics.csv"))
    
    else:
        checkpoint = torch.load(Path(dir, "torch_model.pt"), map_location="cpu")
        # checkpoint is a dictionary containing model weights & dev metrics
        run_results = pd.DataFrame({
            "npmi_value": checkpoint["dev_metrics"]["npmi"] # I am probably wrong in the key names here, but it's something like this
            "num_topics": checkpoint["options"].num_topics # you can also get out the settings you used
            # add other metrics you may want here
        })

   run_results["run"] = dir.name # uses the directory name as an identifier
   all_results.append(run_results)

all_results = (
    pd.concatenate(run_results, axis=0, ignore_index=True)
      .sort_values("npmi_value", ascending=False)
)
all_results.to_csv("main_results_directory/all_results.csv") # if you want to look at it in Excel instead of in native pandas